#include <avr/pgmspace.h>
#define byte uchar

//LCL                		    `    a    b    c    d    e    f    g    h    i    j    k    l    m    n    o
const byte Lowr1[16] PROGMEM = {0x35,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,0x10,0x11,0x12};
//LCU			       	    	 p    q    r    s    t    u    v    w    x    y    z    {    _    }    ~   CNTR (Ctrl)
const byte Lowr2[16] PROGMEM = {0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0xDB,0xDC,0xDD,0xC0,0x00};

//HCL                   		 @    A    B    C    D    E    F    G    H    I    J    K    L    M    N    O
const byte Uppr1[16] PROGMEM = {0x35,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,0x10,0x11,0x12};
//HCU             			       P0x04Q    R    S    T    U    V    W    X    Y    Z    [    \    ]   ENDL ENDP
const byte Uppr2[16] PROGMEM = {0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0xDB,0xDC,0xDD,0x23,0x00};

//NUM            		        0    1    2    3    4    5    6    7    8    9    :    ;    <    =    >    ?
const byte Numbr[16] PROGMEM = {0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0xBA,0xBA,0xBC,0xBB,0xBE,0xBF};
//SYM           		        SPC   !    "    #    $    %    &    '    (    )    *    +    ,    -    .    /
const byte Symbl[16] PROGMEM = {0x20,0x31,0xDE,0x33,0x34,0x35,0x37,0x27,0x39,0x30,0x38,0x2B,0xBC,0xDC,0xBE,0xBF};

//   Binding:    		        SUPR TAB  ESC  DEL                          Insrt      PGUP FMOD PGDN BKSP
//               		        BLUE TAB  CNCL ERAP ERAL PINK C+P  LBLU WHIT INSR COLR BLFT TRAN BRGT RTN  CTRL+CNCL
const byte Ctrl1[16] PROGMEM = {0x00,0x09,0x1B,0x2E,0x00,0x00,0x00,0x00,0x00,0xD2,0x00,0x21,0x00,0x22,0x08,0x00};

//   Binding:     		       SHFT      HOME      ALT                 RGHY      DOWN           ENTR LEFT  UP
//                 		      CHAN C+Q  HOME C+C  ALPA BLAK RED  GREN RGHT C+Y  DOWN C+K  YELO  CR  LEFT  UP
const byte Ctrl2[16] PROGMEM = {0x00,0x00,0x24,0x00,0x00,0x00,0x00,0x00,0x27,0x00,0x28,0x00,0x00,0x0D,0x25,0x26};
//


//FMOD TABLES

//LCL              			       `    a    b    c    d    F15  f    g    h    F20  j    k    l    m    n    F21
const byte FLowr1[16] PROGMEM = {0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x83,0x00,0x00,0x00,0x00,0x00,0x84};
//LCU         		              F22  F13  F16  s    F17  F19  v    F14  x    F18  z    {    F24  }    F12 CNTR (Ctrl)
const byte FLowr2[16] PROGMEM = {0x85,0x7C,0x7F,0x00,0x80,0x82,0x00,0x7D,0x00,0x81,0x00,0x00,0x87,0x00,0x7B,0x00};

//HCL          					    @    A    B    C    D    E    F    G    H    I    J    K    L    M    N    O
const byte FUppr1[16] PROGMEM = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
//HCU      					        P    Q    R    S    T    U    V    W    X    Y    Z    [    \    ]   ENDL ENDP
const byte FUppr2[16] PROGMEM = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

//NUM         		              F10   F1   F2   F3   F4   F5   F6   F7   F8   F9   F23   ;    <    =    >    ?
const byte FNumbr[16] PROGMEM = {0x79,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x86,0x00,0x00,0x00,0x00,0x00};
//SYM             		          SPC  !    "    #    $    %    &    '    (    )    *    +    ,    F11  .    /
const byte FSymbl[16] PROGMEM = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7A,0x00,0x00};

//   Binding:    			     SUPR TAB  ESC  DEL                          Insrt      PGUP FMOD PGDN BKSP
//              			     BLUE TAB  CNCL ERAP ERAL PINK C+P  LBLU WHIT INSR COLR BLFT TRAN BRGT RTN  CTRL+CNCL
const byte FCtrl1[16] PROGMEM = {0x00,0x09,0x1B,0x2E,0x00,0x00,0x00,0x00,0x00,0xD2,0x00,0x21,0x00,0x22,0x08,0x00};

//   Binding:   		         SHFT      HOME      ALT                 RGHY      DOWN           ENTR LEFT  UP
//               		         CHAN C+Q  HOME C+C  ALPA BLAK RED  GREN RGHT C+Y  DOWN C+K YELO  CR   LEFT  UP
const byte FCtrl2[16] PROGMEM = {0x00,0x00,0x24,0x00,0x00,0x00,0x00,0x00,0x27,0x00,0x28,0x00,0x00,0x0D,0x25,0x26};


03:36:18 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:385:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:390:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:399:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3798 bytes (92.7% Full)
(.text + .data + .bootloader)

Data:        176 bytes (68.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3798 bytes):

Writing | ################################################## | 100% 2.42s

avrdude: 3798 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3798 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.95s

avrdude: verifying ...
avrdude: 3798 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 

03:36:23 Build Finished. 0 errors, 3 warnings. (took 5s.586ms)


23:40:23 **** Incremental Build of configuration Release for project Vista802 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista802.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3584 bytes (87.5% Full)
(.text + .data + .bootloader)

Data:        242 bytes (94.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
23:41:08 **** Incremental Build of configuration Release for project Vista802 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista802.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3584 bytes (87.5% Full)
(.text + .data + .bootloader)

Data:        242 bytes (94.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
23:41:31 **** Incremental Build of configuration Release for project Vista802 ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista802.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3584 bytes (87.5% Full)
(.text + .data + .bootloader)

Data:        242 bytes (94.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
23:44:21 **** Incremental Build of configuration Release for project Vista802 ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I"/home/angel/eclipse-workspace/Vista802/usbdrv" -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:335:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:342:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
Finished building: ../main.c
 
Building target: Vista802.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,Vista802.map -mmcu=attiny4313 -o "Vista802.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista802.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S Vista802.elf  >"Vista802.lss"
Finished building: Vista802.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista802.elf  "Vista802.hex"
Finished building: Vista802.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex Vista802.elf  "Vista802.eep"
Finished building: Vista802.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista802.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3454 bytes (84.3% Full)
(.text + .data + .bootloader)

Data:        240 bytes (93.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
23:46:06 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3514 bytes (85.8% Full)
(.text + .data + .bootloader)

Data:        241 bytes (94.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3514 bytes):

Writing | ################################################## | 100% 2.25s

avrdude: 3514 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3514 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3514 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
23:47:21 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:335:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:342:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3514 bytes (85.8% Full)
(.text + .data + .bootloader)

Data:        241 bytes (94.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3514 bytes):

Writing | ################################################## | 100% 2.26s

avrdude: 3514 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3514 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3514 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
23:48:22 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:332:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:339:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3430 bytes (83.7% Full)
(.text + .data + .bootloader)

Data:        199 bytes (77.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3430 bytes):

Writing | ################################################## | 100% 2.20s

avrdude: 3430 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3430 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.75s

avrdude: verifying ...
avrdude: 3430 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Finished building: avrdudedummy
Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

 
Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

13:49:03 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:332:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:339:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3476 bytes (84.9% Full)
(.text + .data + .bootloader)

Data:        199 bytes (77.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3476 bytes):

Writing | ################################################## | 100% 2.32s

avrdude: 3476 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3476 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.80s

avrdude: verifying ...
avrdude: 3476 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.
Finished building: avrdudedummy

 
22:25:40 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3476 bytes (84.9% Full)
(.text + .data + .bootloader)

Data:        199 bytes (77.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3476 bytes):

Writing | ################################################## | 100% 2.28s

avrdude: 3476 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3476 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3476 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
Finished building: avrdudedummy
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
 
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

00:06:55 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.h:22:0,
                 from ../main.c:1:
../Tables.h:141:1: error: redeclaration of enumerator ‘KEY_KPEQUAL’
 KEY_KPEQUAL, // 0x86  Keypad Equal Sign
 ^
../Tables.h:108:1: note: previous definition of ‘KEY_KPEQUAL’ was here
 KEY_KPEQUAL, // Keypad =
 ^
../Tables.h:169:1: error: redeclaration of enumerator ‘KEY_CLEAR’
 KEY_CLEAR, // 0xa2  Keyboard Clear/Again
 ^
../Tables.h:163:1: note: previous definition of ‘KEY_CLEAR’ was here
 KEY_CLEAR, // 0x9c  Keyboard Clear
 ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:330:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:337:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
00:08:14 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.h:22:0,
                 from ../main.c:1:
../Tables.h:141:1: error: redeclaration of enumerator ‘KEY_KPEQUAL’
 KEY_KPEQUAL, // 0x86  Keypad Equal Sign
 ^
../Tables.h:108:1: note: previous definition of ‘KEY_KPEQUAL’ was here
 KEY_KPEQUAL, // Keypad =
 ^
../Tables.h:169:1: error: redeclaration of enumerator ‘KEY_CLEAR’
 KEY_CLEAR, // 0xa2  Keyboard Clear/Again
 ^
../Tables.h:163:1: note: previous definition of ‘KEY_CLEAR’ was here
 KEY_CLEAR, // 0x9c  Keyboard Clear
 ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:330:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:337:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
00:08:20 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:330:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:337:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3518 bytes (85.9% Full)
(.text + .data + .bootloader)

Data:        199 bytes (77.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3518 bytes):

Writing | ################################################## | 100% 2.19s

avrdude: 3518 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3518 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3518 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
00:17:11 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:357:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:364:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3530 bytes (86.2% Full)
(.text + .data + .bootloader)

Data:        199 bytes (77.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3530 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3530 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3530 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3530 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
00:35:59 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3530 bytes (86.2% Full)
(.text + .data + .bootloader)

Data:        199 bytes (77.7% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3530 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3530 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3530 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3530 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
00:37:49 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:271:1: error: unknown type name ‘uin3t8_t’
 uin3t8_t USART_ReceiveByte() {
 ^
../main.c: In function ‘releaseKeys’:
../main.c:322:42: error: subscripted value is neither array nor pointer nor vector
  if(releaseMods) keyboard_report.modifier[0] = 0;
                                          ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:352:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:357:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:366:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
00:38:21 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:352:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:357:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:366:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3552 bytes (86.7% Full)
(.text + .data + .bootloader)

Data:        201 bytes (78.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3552 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3552 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3552 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3552 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
00:39:57 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘sendIntterupt’:
../main.c:311:3: warning: implicit declaration of function ‘usb_poll’ [-Wimplicit-function-declaration]
   usb_poll();
   ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:358:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:367:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
./main.o: In function `sendIntterupt':
main.c:(.text.sendIntterupt+0x40): undefined reference to `usb_poll'
collect2: error: ld returned 1 exit status
make: *** [makefile:86: Vista80Controller.elf] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
00:40:28 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:358:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:367:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3554 bytes (86.8% Full)
(.text + .data + .bootloader)

Data:        201 bytes (78.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3554 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3554 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3554 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3554 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
00:41:04 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3554 bytes (86.8% Full)
(.text + .data + .bootloader)

Data:        201 bytes (78.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3554 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3554 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3554 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3554 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
00:48:00 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../usbdrv/usbdrv.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv/usbdrv.d" -MT"usbdrv/usbdrv.o" -c -o "usbdrv/usbdrv.o" "../usbdrv/usbdrv.c"
Finished building: ../usbdrv/usbdrv.c
 
Building file: ../usbdrv/usbdrvasm.S
Invoking: AVR Assembler
avr-gcc -x assembler-with-cpp -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"usbdrv/usbdrvasm.d" -MT"usbdrv/usbdrvasm.o" -c -o "usbdrv/usbdrvasm.o" "../usbdrv/usbdrvasm.S"
Finished building: ../usbdrv/usbdrvasm.S
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.h:21:0,
                 from ../main.c:1:
../usbdrv/usbdrv.h:249:33: error: variable ‘usbDescriptorHidReport’ must be const in order to be put into read-only section by means of ‘__attribute__((progmem))’
 #define usbHidReportDescriptor  usbDescriptorHidReport
                                 ^
../main.h:50:6: note: in expansion of macro ‘usbHidReportDescriptor’
 char usbHidReportDescriptor[USB_CFG_HID_REPORT_DESCRIPTOR_LENGTH]
      ^
../usbdrv/usbdrv.h:249:33: error: conflicting types for ‘usbDescriptorHidReport’
 #define usbHidReportDescriptor  usbDescriptorHidReport
                                 ^
../main.h:50:6: note: in expansion of macro ‘usbHidReportDescriptor’
 char usbHidReportDescriptor[USB_CFG_HID_REPORT_DESCRIPTOR_LENGTH]
      ^
../usbdrv/usbdrv.h:477:6: note: previous declaration of ‘usbDescriptorHidReport’ was here
 char usbDescriptorHidReport[];
      ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:358:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:367:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
00:49:17 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.h:21:0,
                 from ../main.c:1:
../usbdrv/usbdrv.h:249:33: error: variable ‘usbDescriptorHidReport’ must be const in order to be put into read-only section by means of ‘__attribute__((progmem))’
 #define usbHidReportDescriptor  usbDescriptorHidReport
                                 ^
../main.h:50:14: note: in expansion of macro ‘usbHidReportDescriptor’
 PROGMEM char usbHidReportDescriptor[USB_CFG_HID_REPORT_DESCRIPTOR_LENGTH]
              ^
../usbdrv/usbdrv.h:249:33: error: conflicting types for ‘usbDescriptorHidReport’
 #define usbHidReportDescriptor  usbDescriptorHidReport
                                 ^
../main.h:50:14: note: in expansion of macro ‘usbHidReportDescriptor’
 PROGMEM char usbHidReportDescriptor[USB_CFG_HID_REPORT_DESCRIPTOR_LENGTH]
              ^
../usbdrv/usbdrv.h:477:6: note: previous declaration of ‘usbDescriptorHidReport’ was here
 char usbDescriptorHidReport[];
      ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:358:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:367:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
00:49:33 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:358:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:367:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3554 bytes (86.8% Full)
(.text + .data + .bootloader)

Data:        201 bytes (78.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3554 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3554 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3554 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3554 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:09:59 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3554 bytes (86.8% Full)
(.text + .data + .bootloader)

Data:        201 bytes (78.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3554 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3554 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3554 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3554 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:13:42 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘parseKey’:
../main.c:257:3: error: expected ‘;’ before ‘return’
   return true;
   ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:335:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:340:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:349:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
01:13:55 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:335:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:340:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:349:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3404 bytes (83.1% Full)
(.text + .data + .bootloader)

Data:        193 bytes (75.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3404 bytes):

Writing | ################################################## | 100% 2.15s

avrdude: 3404 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3404 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.76s

avrdude: verifying ...
avrdude: 3404 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:15:19 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3404 bytes (83.1% Full)
(.text + .data + .bootloader)

Data:        193 bytes (75.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3404 bytes):

Writing | ################################################## | 100% 2.16s

avrdude: 3404 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3404 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.75s

avrdude: verifying ...
avrdude: 3404 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:17:37 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:336:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:341:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:350:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3506 bytes (85.6% Full)
(.text + .data + .bootloader)

Data:        197 bytes (77.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3506 bytes):

Writing | ################################################## | 100% 2.19s

avrdude: 3506 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3506 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3506 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:22:15 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:347:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:352:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:361:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
../main.c: In function ‘main’:
../main.c:59:32: warning: iteration 6u invokes undefined behavior [-Waggressive-loop-optimizations]
     if (keyboard_report.keycode[i]) {
                                ^
../main.c:58:4: note: containing loop
    for (int i = 0; i < 7; i++) {
    ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3552 bytes (86.7% Full)
(.text + .data + .bootloader)

Data:        197 bytes (77.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3552 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3552 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3552 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3552 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:22:37 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3552 bytes (86.7% Full)
(.text + .data + .bootloader)

Data:        197 bytes (77.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3552 bytes):

Writing | ################################################## | 100% 2.24s

avrdude: 3552 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3552 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3552 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:24:02 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:348:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:362:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3568 bytes (87.1% Full)
(.text + .data + .bootloader)

Data:        201 bytes (78.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3568 bytes):

Writing | ################################################## | 100% 2.24s

avrdude: 3568 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3568 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: verification error, first mismatch at byte 0x0626
         0x00 != 0x69
avrdude: verification error; content mismatch

avrdude done.  Thank you.

make: *** [makefile:104: avrdudedummy] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
01:24:36 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3568 bytes (87.1% Full)
(.text + .data + .bootloader)

Data:        201 bytes (78.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3568 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3568 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3568 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3568 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:24:47 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:348:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:362:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3538 bytes (86.4% Full)
(.text + .data + .bootloader)

Data:        197 bytes (77.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3538 bytes):

Writing | ################################################## | 100% 2.24s

avrdude: 3538 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3538 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3538 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:26:23 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:342:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:347:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:356:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3432 bytes (83.8% Full)
(.text + .data + .bootloader)

Data:        157 bytes (61.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3432 bytes):

Writing | ################################################## | 100% 2.16s

avrdude: 3432 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3432 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.76s

avrdude: verifying ...
avrdude: 3432 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:27:35 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:343:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:348:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:357:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3452 bytes (84.3% Full)
(.text + .data + .bootloader)

Data:        161 bytes (62.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3452 bytes):

Writing | ################################################## | 100% 2.15s

avrdude: 3452 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3452 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.76s

avrdude: verifying ...
avrdude: 3452 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:30:42 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:344:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:349:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:358:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3482 bytes (85.0% Full)
(.text + .data + .bootloader)

Data:        165 bytes (64.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3482 bytes):

Writing | ################################################## | 100% 2.19s

avrdude: 3482 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3482 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3482 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:41:49 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘main’:
../main.c:59:18: warning: multi-line comment [-Wcomment]
     wdt_reset(); // keep the watchdog happy\
                  ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:336:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:341:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:350:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
../main.c: In function ‘parseKey’:
../main.c:402:1: error: expected declaration or statement at end of input
 }
 ^
../main.c:402:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
01:42:41 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘main’:
../main.c:59:18: warning: multi-line comment [-Wcomment]
     wdt_reset(); // keep the watchdog happy\
                  ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:337:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:342:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:351:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3422 bytes (83.5% Full)
(.text + .data + .bootloader)

Data:        155 bytes (60.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3422 bytes):

Writing | ################################################## | 100% 2.16s

avrdude: 3422 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3422 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.75s

avrdude: verifying ...
avrdude: 3422 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:44:03 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘main’:
../main.c:59:18: warning: multi-line comment [-Wcomment]
     wdt_reset(); // keep the watchdog happy\
                  ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:336:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:341:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:350:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3454 bytes (84.3% Full)
(.text + .data + .bootloader)

Data:        155 bytes (60.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3454 bytes):

Writing | ################################################## | 100% 2.15s

avrdude: 3454 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3454 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.75s

avrdude: verifying ...
avrdude: 3454 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:45:07 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘main’:
../main.c:59:18: warning: multi-line comment [-Wcomment]
     wdt_reset(); // keep the watchdog happy\
                  ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:337:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:342:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:351:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3456 bytes (84.4% Full)
(.text + .data + .bootloader)

Data:        155 bytes (60.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3456 bytes):

Writing | ################################################## | 100% 2.15s

avrdude: 3456 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3456 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.76s

avrdude: verifying ...
avrdude: 3456 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:46:04 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘main’:
../main.c:59:18: warning: multi-line comment [-Wcomment]
     wdt_reset(); // keep the watchdog happy\
                  ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:339:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:344:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3464 bytes (84.6% Full)
(.text + .data + .bootloader)

Data:        155 bytes (60.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3464 bytes):

Writing | ################################################## | 100% 2.20s

avrdude: 3464 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3464 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3464 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:47:36 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘main’:
../main.c:59:18: warning: multi-line comment [-Wcomment]
     wdt_reset(); // keep the watchdog happy\
                  ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:340:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:345:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:354:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
../main.c: In function ‘main’:
../main.c:54:6: warning: ‘updateNeeded’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   if (updateNeeded && usbInterruptIsReady()) {
      ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3492 bytes (85.3% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3492 bytes):

Writing | ################################################## | 100% 2.19s

avrdude: 3492 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3492 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3492 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:48:23 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘main’:
../main.c:59:18: warning: multi-line comment [-Wcomment]
     wdt_reset(); // keep the watchdog happy\
                  ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:340:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:345:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:354:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3494 bytes (85.3% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3494 bytes):

Writing | ################################################## | 100% 2.19s

avrdude: 3494 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3494 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3494 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:51:20 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:340:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:345:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:354:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3500 bytes (85.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: error: program enable: target doesn't answer. 1 
avrdude: initialization failed, rc=-1
         Double check connections and try again, or use -F to override
         this check.


avrdude done.  Thank you.

make: *** [makefile:104: avrdudedummy] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
01:51:26 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3500 bytes (85.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3500 bytes):

Writing | ################################################## | 100% 2.20s

avrdude: 3500 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3500 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3500 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:52:36 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:340:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:345:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:354:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3496 bytes (85.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3496 bytes):

Writing | ################################################## | 100% 2.19s

avrdude: 3496 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3496 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3496 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:54:17 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:337:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:342:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:351:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3502 bytes (85.5% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3502 bytes):

Writing | ################################################## | 100% 2.19s

avrdude: 3502 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3502 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3502 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:55:39 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:337:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:342:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:351:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3500 bytes (85.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3500 bytes):

Writing | ################################################## | 100% 2.19s

avrdude: 3500 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3500 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3500 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:57:17 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:338:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:343:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:352:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3512 bytes (85.7% Full)
(.text + .data + .bootloader)

Data:        159 bytes (62.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3512 bytes):

Writing | ################################################## | 100% 2.19s

avrdude: 3512 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3512 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3512 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:57:41 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:338:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:343:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:352:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3524 bytes (86.0% Full)
(.text + .data + .bootloader)

Data:        159 bytes (62.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3524 bytes):

Writing | ################################################## | 100% 2.24s

avrdude: 3524 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3524 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3524 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:58:43 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:339:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:344:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3524 bytes (86.0% Full)
(.text + .data + .bootloader)

Data:        159 bytes (62.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3524 bytes):

Writing | ################################################## | 100% 2.24s

avrdude: 3524 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3524 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3524 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
01:59:30 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:338:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:343:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:352:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3508 bytes (85.6% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3508 bytes):

Writing | ################################################## | 100% 2.19s

avrdude: 3508 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3508 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.79s

avrdude: verifying ...
avrdude: 3508 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:01:25 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:339:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:344:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3540 bytes (86.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3540 bytes):

Writing | ################################################## | 100% 2.24s

avrdude: 3540 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3540 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3540 bytes of flash verified
Finished building: avrdudedummy
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
 
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

02:03:32 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:339:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:344:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3540 bytes (86.4% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3540 bytes):

Writing | ################################################## | 100% 2.24s

avrdude: 3540 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3540 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3540 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:05:48 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘main’:
../main.c:53:20: error: too few arguments to function ‘print’
   if(updateNeeded) print("fuck");
                    ^
In file included from ../main.c:1:0:
../main.h:105:6: note: declared here
 void print(char* text, unsigned int len);
      ^
../main.c: In function ‘usbFunctionSetup’:
../main.c:339:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:344:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
02:06:00 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:339:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:344:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3524 bytes (86.0% Full)
(.text + .data + .bootloader)

Data:        159 bytes (62.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3524 bytes):

Writing | ################################################## | 100% 2.24s

avrdude: 3524 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3524 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3524 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:07:07 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:340:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:345:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:354:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3524 bytes (86.0% Full)
(.text + .data + .bootloader)

Data:        159 bytes (62.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3524 bytes):

Writing | ################################################## | 100% 2.24s

avrdude: 3524 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3524 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3524 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:11:47 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘main’:
../main.c:68:17: error: ‘flase’ undeclared (first use in this function)
     connected = flase;
                 ^
../main.c:68:17: note: each undeclared identifier is reported only once for each function it appears in
../main.c: In function ‘usbFunctionSetup’:
../main.c:348:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:362:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
02:11:56 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:348:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:362:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3546 bytes (86.6% Full)
(.text + .data + .bootloader)

Data:        159 bytes (62.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3546 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3546 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3546 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3546 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:13:32 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘main’:
../main.c:66:17: error: ‘falsOe’ undeclared (first use in this function)
     connected = falsOe;
                 ^
../main.c:66:17: note: each undeclared identifier is reported only once for each function it appears in
../main.c: In function ‘usbFunctionSetup’:
../main.c:346:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:351:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:360:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
02:13:41 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:346:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:351:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:360:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3544 bytes (86.5% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3544 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3544 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3544 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3544 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:14:51 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:346:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:351:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:360:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3568 bytes (87.1% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3568 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3568 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3568 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3568 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:17:17 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:348:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:362:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3582 bytes (87.5% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3582 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3582 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3582 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3582 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:26:00 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:352:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:357:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:366:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3582 bytes (87.5% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3582 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3582 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3582 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3582 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:27:16 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:352:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:357:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:366:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3582 bytes (87.5% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3582 bytes):

Writing | ################################################## | 100% 2.23s

avrdude: 3582 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3582 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.82s

avrdude: verifying ...
avrdude: 3582 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:31:35 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:355:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:360:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:369:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3586 bytes (87.5% Full)
(.text + .data + .bootloader)

Data:        153 bytes (59.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3586 bytes):

Writing | ################################################## | 100% 2.27s

avrdude: 3586 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3586 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.85s

avrdude: verifying ...
avrdude: 3586 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:42:24 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:344:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:349:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:358:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3674 bytes (89.7% Full)
(.text + .data + .bootloader)

Data:        169 bytes (66.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3674 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3674 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3674 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.88s

avrdude: verifying ...
avrdude: 3674 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:47:45 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘parseKey’:
../main.c:244:6: error: ‘fmodState’ undeclared (first use in this function)
  if (fmodState) {
      ^
../main.c:244:6: note: each undeclared identifier is reported only once for each function it appears in
../main.c: In function ‘usbFunctionSetup’:
../main.c:350:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:355:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:364:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
02:48:01 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:350:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:355:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:364:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3702 bytes (90.4% Full)
(.text + .data + .bootloader)

Data:        173 bytes (67.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3702 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3702 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3702 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.88s

avrdude: verifying ...
avrdude: 3702 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:49:42 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:350:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:355:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:364:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3706 bytes (90.5% Full)
(.text + .data + .bootloader)

Data:        173 bytes (67.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3706 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3706 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3706 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.89s

avrdude: verifying ...
avrdude: 3706 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:52:26 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:349:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:354:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:363:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3640 bytes (88.9% Full)
(.text + .data + .bootloader)

Data:        169 bytes (66.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3640 bytes):

Writing | ################################################## | 100% 2.27s

avrdude: 3640 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3640 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.85s

avrdude: verifying ...
avrdude: 3640 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:58:08 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:352:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:357:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:366:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3664 bytes (89.5% Full)
(.text + .data + .bootloader)

Data:        170 bytes (66.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3664 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3664 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3664 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.89s

avrdude: verifying ...
avrdude: 3664 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
02:59:19 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:358:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:367:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3668 bytes (89.6% Full)
(.text + .data + .bootloader)

Data:        170 bytes (66.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3668 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3668 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3668 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.88s

avrdude: verifying ...
avrdude: 3668 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:00:55 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:358:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:367:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3664 bytes (89.5% Full)
(.text + .data + .bootloader)

Data:        170 bytes (66.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3664 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3664 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3664 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.88s

avrdude: verifying ...
avrdude: 3664 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:02:33 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:353:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:358:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:367:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3668 bytes (89.6% Full)
(.text + .data + .bootloader)

Data:        170 bytes (66.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3668 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3668 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3668 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.88s

avrdude: verifying ...
avrdude: 3668 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:03:22 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘parseKey’:
../main.c:250:6: error: ‘stickState’ undeclared (first use in this function)
  if (stickState) {
      ^
../main.c:250:6: note: each undeclared identifier is reported only once for each function it appears in
../main.c: In function ‘usbFunctionSetup’:
../main.c:357:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:362:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:371:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
03:03:31 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘parseKey’:
../main.c:250:6: error: ‘stickState’ undeclared (first use in this function)
  if (stickState) {
      ^
../main.c:250:6: note: each undeclared identifier is reported only once for each function it appears in
../main.c: In function ‘usbFunctionSetup’:
../main.c:357:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:362:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:371:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
make: *** [subdir.mk:20: main.o] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
03:03:48 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:357:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:362:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:371:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3698 bytes (90.3% Full)
(.text + .data + .bootloader)

Data:        176 bytes (68.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3698 bytes):

Writing | ################################################## | 100% 2.31s

avrdude: 3698 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3698 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.88s

avrdude: verifying ...
avrdude: verification error, first mismatch at byte 0x0d52
         0x00 != 0x38
avrdude: verification error; content mismatch

avrdude done.  Thank you.

make: *** [makefile:104: avrdudedummy] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
03:10:35 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:379:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:384:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:393:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3756 bytes (91.7% Full)
(.text + .data + .bootloader)

Data:        176 bytes (68.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3756 bytes):

Writing | ################################################## | 100% 2.35s

avrdude: 3756 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3756 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.92s

avrdude: verifying ...
avrdude: 3756 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:14:59 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:378:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:383:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:392:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3764 bytes (91.9% Full)
(.text + .data + .bootloader)

Data:        176 bytes (68.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3764 bytes):

Writing | ################################################## | 100% 2.35s

avrdude: 3764 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3764 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.92s

avrdude: verifying ...
avrdude: verification error, first mismatch at byte 0x077e
         0x11 != 0x8d
avrdude: verification error; content mismatch

avrdude done.  Thank you.

make: *** [makefile:104: avrdudedummy] Error 1
"make all" terminated with exit code 2. Build might be incomplete.
03:15:09 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3764 bytes (91.9% Full)
(.text + .data + .bootloader)

Data:        176 bytes (68.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3764 bytes):

Writing | ################################################## | 100% 2.35s

avrdude: 3764 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3764 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.92s

avrdude: verifying ...
avrdude: 3764 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:19:44 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:376:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:381:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:390:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3762 bytes (91.8% Full)
(.text + .data + .bootloader)

Data:        176 bytes (68.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3762 bytes):

Writing | ################################################## | 100% 2.35s

avrdude: 3762 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3762 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.92s

avrdude: verifying ...
avrdude: 3762 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:26:18 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:389:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:394:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:403:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3804 bytes (92.9% Full)
(.text + .data + .bootloader)

Data:        176 bytes (68.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3804 bytes):

Writing | ################################################## | 100% 2.39s

avrdude: 3804 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3804 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.95s

avrdude: verifying ...
avrdude: 3804 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:34:42 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:386:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:391:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:400:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3798 bytes (92.7% Full)
(.text + .data + .bootloader)

Data:        176 bytes (68.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3798 bytes):

Writing | ################################################## | 100% 2.42s

avrdude: 3798 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3798 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.95s

avrdude: verifying ...
avrdude: 3798 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:36:18 **** Incremental Build of configuration Release for project Vista80Controller ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -I../usbdrv/ -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=attiny4313 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function ‘usbFunctionSetup’:
../main.c:385:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = (void*) &keyboard_report; // we only have this one
              ^
../main.c:390:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &idleRate;
              ^
../main.c:399:14: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
    usbMsgPtr = &protocolVer;
              ^
Finished building: ../main.c
 
Building target: Vista80Controller.elf
Invoking: AVR C++ Linker
avr-g++ -Wl,-Map,Vista80Controller.map,--cref -mrelax -Wl,--gc-sections -mmcu=attiny4313 -o "Vista80Controller.elf" ./usbdrv/oddebug.o ./usbdrv/usbdrv.o ./usbdrv/usbdrvasm.o  ./main.o   
Finished building target: Vista80Controller.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex Vista80Controller.elf  "Vista80Controller.hex"
Finished building: Vista80Controller.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=attiny4313 Vista80Controller.elf
AVR Memory Usage
----------------
Device: attiny4313

Program:    3798 bytes (92.7% Full)
(.text + .data + .bootloader)

Data:        176 bytes (68.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
/usr/bin/avrdude -pt4313 -cusbasp -u -Uflash:w:Vista80Controller.hex:a -Ulfuse:w:0xee:m -Uhfuse:w:0xd9:m -Uefuse:w:0xff:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e920d (probably t4313)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "Vista80Controller.hex"
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: writing flash (3798 bytes):

Writing | ################################################## | 100% 2.42s

avrdude: 3798 bytes of flash written
avrdude: verifying flash memory against Vista80Controller.hex:
avrdude: load data flash data from input file Vista80Controller.hex:
avrdude: input file Vista80Controller.hex auto detected as Intel Hex
avrdude: input file Vista80Controller.hex contains 3798 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.95s

avrdude: verifying ...
avrdude: 3798 bytes of flash verified
avrdude: reading input file "0xee"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xee:
avrdude: load data lfuse data from input file 0xee:
avrdude: input file 0xee contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified
avrdude: reading input file "0xff"
avrdude: writing efuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of efuse written
avrdude: verifying efuse memory against 0xff:
avrdude: load data efuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip efuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of efuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
